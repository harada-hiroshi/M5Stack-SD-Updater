# This file is used to configure the Travis CI tests of this library

# Although sudo is not required by arduino-ci-script, I've experienced that setting "sudo: false" can cause the Travis CI build time to significantly increase for some reason so this setting is left as "sudo: required"
sudo: required

language: python
python: 3.6

env:
  global:
    # The Arduino IDE will be installed at APPLICATION_FOLDER/arduino
    - APPLICATION_FOLDER="${HOME}/arduino-ide"
    - SKETCHBOOK_FOLDER="${HOME}/arduino-sketchbook"


before_install:
  # Formatting checks:
  # Check for files starting with a blank line
  - rm -Rf examples/M5Stack-SD-Menu/SD-Apps/
  - rm -Rf examples/M5Stack-SD-Menu/SD-Content/
  #- find . -path ./.git -prune -o -type f -print0 | xargs -0 -L1 bash -c 'head -1 "$0" | grep --binary-files=without-match --regexp="^$"; if [[ "$?" == "0" ]]; then echo "Blank line found at start of $0."; false; fi'
  # Check for tabs
  #- "if grep --line-number --recursive --binary-files=without-match --exclude-dir=.git --exclude=keywords.txt --regexp=$'\t' .; then echo 'Tab found.'; false; fi"
  # Check for trailing whitespace
  #- "if grep --line-number --recursive --binary-files=without-match --exclude-dir=.git --regexp='[[:blank:]]$' .; then echo 'Trailing whitespace found.'; false; fi"
  # Check for non-Unix line endings
  #- "if grep --files-with-matches --recursive --binary-files=without-match --exclude-dir=.git --regexp=$'\r$' .; then echo 'Non-Unix EOL detected.'; false; fi"
  # Check for blank lines at end of files
  #- find . -path ./.git -prune -o -type f -print0 | xargs -0 -L1 bash -c 'tail -1 "$0" | grep --binary-files=without-match --regexp="^$"; if [[ "$?" == "0" ]]; then echo "Blank line found at end of $0."; false; fi'
  # Check for files that don't end in a newline (https://stackoverflow.com/a/25686825)
  #- find . -path ./.git -prune -o -type f -print0 | xargs -0 -L1 bash -c 'if test "$(grep --files-with-matches --binary-files=without-match --max-count=1 --regexp='.*' "$0")" && test "$(tail --bytes=1 "$0")"; then echo "No new line at end of $0."; false; fi'

  # Check for typos
  #- git clone https://github.com/ss18/grep-typos.git "${HOME}/scripts/grep-typos"
  #- find "$TRAVIS_BUILD_DIR" -path "${TRAVIS_BUILD_DIR}/.git" -prune -or -type f -print0 | xargs --null --max-args=1 bash "${HOME}/scripts/grep-typos/grep_typos.sh" "$0"
  #- rm "${HOME}/scripts/grep-typos" --recursive --force

  - git clone https://github.com/per1234/arduino-ci-script.git "${HOME}/scripts/arduino-ci-script"
  - cd "${HOME}/scripts/arduino-ci-script"
  # Get new tags from the remote
  - git fetch --tags
  # Checkout the latest tag
  - git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
  - source "${HOME}/scripts/arduino-ci-script/arduino-ci-script.sh"

  # Uncomment the following lines to get verbose output for debugging
  # 0 (minimum/default) - 2 (maximum) verbosity
  #- set_script_verbosity 2
  # Turn on verbose output during compilation
  - set_script_verbosity 1
  - set_verbose_output_during_compilation "true"

  # Check for library issues that don't affect compilation
  - set_library_testing "true"

  - set_application_folder "$APPLICATION_FOLDER"
  - set_sketchbook_folder "$SKETCHBOOK_FOLDER"

  # The EEPROM v2.0 library, which is required by the examples, was added in Arduino IDE 1.6.2, but that version doesn't play nicely with other versions so I'm testing with 1.6.3 and newer
  - install_ide '("1.8.0" "1.8.9" "newest")'

  # Install the library from the repository
  - install_library
  - install_library "M5Stack"
  - install_library 'https://github.com/bblanchon/ArduinoJson.git' # "ArduinoJSON"

  - ls ${TRAVIS_BUILD_DIR} -la
  - ls ${TRAVIS_BUILD_DIR}/examples/M5Stack-SD-Menu/ -la
  - ls $SKETCHBOOK_FOLDER -la
  - ls $SKETCHBOOK_FOLDER/libraries -la
  - pwd
  #- install_package "esp32:esp32" "https://dl.espressif.com/dl/package_esp32_index.json" #  # esp32:esp32:m5stack-core-esp32
  - /home/travis/arduino-ide/arduino-1.8.10/arduino --pref "boardsmanager.additional.urls=https://dl.espressif.com/dl/package_esp32_index.json" --save-prefs   &>/dev/null
  - /home/travis/arduino-ide/arduino-1.8.10/arduino --install-boards esp32:esp32 &>/dev/null
  #- /home/travis/arduino-ide/arduino-1.8.10/arduino --board $BOARD --save-prefs &>/dev/null
  #- install_package 'esp32:esp32' 'https://dl.espressif.com/dl/package_esp32_index.json'
  - echo "BOARD INSTALLED"
  - pip install pyserial


script:
  # Compile all example sketches included with the library
  # build_sketch arguments: sketch name, fqbn, allow failure, IDE version/list/range
  - build_sketch "${TRAVIS_BUILD_DIR}/examples/M5Stack-SD-Menu/M5Stack-SD-Menu.ino" "esp32:esp32:m5stack-core-esp32:FlashFreq=80,UploadSpeed=921600" "false" "oldest" "newest"


after_script:
  # Commit a report of the job results to the CI-reports repository
  - USER_NAME="$(echo "$TRAVIS_REPO_SLUG" | cut -d'/' -f 1)"
  - REPOSITORY_NAME="$(echo "$TRAVIS_REPO_SLUG" | cut -d'/' -f 2)"
  - publish_report_to_repository "$REPORT_GITHUB_TOKEN" "https://github.com/${USER_NAME}/CI-reports.git" "$REPOSITORY_NAME" "build_$(printf "%05d\n" "${TRAVIS_BUILD_NUMBER}")" "false"
  # Print a tab separated report of all sketch verification results to the log
  - display_report


notifications:
  email:
    on_success: always
    on_failure: always
  webhooks:
    urls:
      - https://www.travisbuddy.com/
    on_success: never
    on_failure: always
